name: "SAST scan"
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    name: Run unit tests and SAST scan on the source code
    steps:
      #- uses: actions/checkout@v1
      #- name: Run AppScan CodeSweep
      #  uses: HCL-TECH-SOFTWARE/appscan-codesweep-action@v2
      #  with:
      #    asoc_key: ${{secrets.ASOC_KEY}}
      #    asoc_secret: ${{secrets.ASOC_SECRET}}
    #env:
      #GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}  
  #needs: build
  #name: Run the SAST scan on the source code
  #steps:
      - uses: actions/checkout@v1
      - name: Run AppScan CodeSweep
        uses: alphayax/appscan-sast-action@v1
        with:
          #target: http://demo.testfire.net/
          api-secret: "${{secrets.ASOC_SECRET}}"
          api-id: "${{secrets.ASOC_KEY}}"
          application-id: "cccb700c-1188-44e6-9d05-b5a287d1eca2"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}} 
          # ASoC -  Download the latest version of SAClientUtil to generate the .irx in preparation for the scan
          Invoke-WebRequest -Uri "https://cloud.appscan.com/api/Local/StaticAnalyzer/ARSATool" -OutFile "saclientutil.zip"
          Expand-Archive -Path "saclientutil.zip" -DestinationPath "saclientutil"
          $SAClientUtilFolder = Get-ChildItem -Path .\saclientutil
          $command = ".\saclientutil\" + $SAClientUtilFolder.name + "\bin\appscan.bat"
          & $command prepare -c $env:ASoC_IRX_Config_file -n output.irx
          
          # Comment out this lines for a proper .irx generation. This line is for demo purposes, it only downloads a sample .irx file that is not related to the source code in this repo
          # Invoke-WebRequest -Uri "https://cloud.appscan.com/api/V2/Tools/ScanDemoFiles/StaticAnalyzer" -OutFile "output.irx"
          # ASoC - Upload the .irx file onto ASoC
          $irx_file = [IO.File]::ReadAllBytes('output.irx')
          $params = @{
            Uri         = "$baseURL/FileUpload"
            Method      = 'Post'
            Headers = @{
              'Content-Type' = 'multipart/form-data'
              Authorization = "Bearer $bearer_token"
            }
             Form = @{
            'fileToUpload' = Get-Item -Path "output.irx"
           }
          }
          $upload = Invoke-RestMethod @params
          $upload_File_ID = $upload.FileId
          write-host "IRX Uploaded File ID: $upload_File_ID"
          
          # ASoC - Execute a Static (SAST) Scan on ASoC by specifying the upload_File_ID